{"version":3,"sources":["components/Main/Navbar.jsx","components/Main/Modal.jsx","features/tramaSlice.js","components/Main/DropFile.jsx","components/Main/TramasProcess/PegarTrama.jsx","axiosConfig/axiosConfig.js","components/Main/TramasProcess/Results.jsx","components/Main/TramasProcess/Ingresar.jsx","components/Main/Content.jsx","components/Main/Tramas.jsx","components/AppRouter.jsx","index.js"],"names":["Navbar","className","width","src","alt","Modal","modalContent","isVisible","showResults","useSelector","state","trama","style","transform","tramaSlice","createSlice","name","initialState","content","result","reducers","setTrama","action","payload","setResult","setShowResults","resetAll","actions","DropFile","props","useState","tramaInfo","setTramaInfo","dispatch","useDispatch","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","trim","readAsText","useDropzone","getRootProps","getInputProps","files","map","path","size","icon","faFileAlt","length","PegarTrama","tramaRef","useRef","tramaContent","useEffect","current","focus","value","onKeyUp","placeholder","ref","axios","create","baseURL","Results","setIsModalVisible","frame","Red","Adicional","show","setShow","faNetworkWired","faEthernet","faDotCircle","faWifi","String","search","faServer","faInfoCircle","onClick","faTimesCircle","setTimeout","Ingresar","selectedMode","setSelectedMode","error","setError","isLoading","setIsLoading","faPaste","faFileUpload","faExclamationTriangle","axiosConfig","post","then","res","data","success","catch","err","disabled","faSpinner","spin","Content","isModalVisible","href","rel","target","Tramas","AppRouter","element","to","store","configureStore","reducer","tramaReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f6f577f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"flex justify-between items-center border-b-2 border-blue-400 shadow-md bg-white\">\r\n            <div className=\"flex items-center gap-1 cursor-pointer\">\r\n                <img width=\"60\" src=\"https://icons-for-free.com/iconfiles/png/512/connection+earth+internet+network+social+world+icon-1320183955809923202.png\" alt=\"Network\" />\r\n                <div className=\"cursor-pointer font-sans italic text-lg\">Redes de Datos I - Proyecto Tramas</div>\r\n            </div>\r\n            <div className=\"mr-3 text-small text-gray-600 italic\">\r\n                Brayan Ayala & Urias Flores\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Modal = ({ modalContent, isVisible }) => {\r\n    const { showResults } = useSelector(state => state.trama)\r\n\r\n    return (\r\n        <div className={showResults ? \"z-10 -mt-16 fixed w-full transition-all duration-500\" : \"z-10 fixed w-full transition-all duration-500\"} style={isVisible ? { transform: 'translateX(0)' } : { transform: 'translateX(-100%)' }}>\r\n            {modalContent}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Modal;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst tramaSlice = createSlice({\r\n    name: 'trama',\r\n    initialState: {\r\n        content: '',\r\n        result: {},\r\n        showResults: false,\r\n    },\r\n    reducers: {\r\n        setTrama: (state, action) => {\r\n            state.content = action.payload;\r\n        },\r\n        setResult: (state, action) => {\r\n            state.result = action.payload;\r\n        },\r\n        setShowResults: (state, action) => {\r\n            state.showResults = action.payload;\r\n        },\r\n        resetAll: (state) => {\r\n            state.content = '';\r\n            state.result = {};\r\n            state.showResults = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setTrama, setResult, setShowResults, resetAll } = tramaSlice.actions;\r\nexport default tramaSlice.reducer;","import React, { useCallback, useState } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTrama } from '../../features/tramaSlice';\r\n\r\nconst DropFile = (props) => {\r\n    const [tramaInfo, setTramaInfo] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        acceptedFiles.forEach((file) => {\r\n          const reader = new FileReader()\r\n    \r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n          // Do whatever you want with the file contents\r\n            const binaryStr = reader.result\r\n            setTramaInfo(binaryStr.trim());\r\n            dispatch(setTrama(binaryStr.trim()));\r\n          }\r\n          reader.readAsText(file)\r\n        })\r\n        \r\n    }, []);\r\n\r\n    const {acceptedFiles, getRootProps, getInputProps} = useDropzone({ onDrop });\r\n  \r\n    const files = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n        {file.path} - {file.size} bytes\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <section>\r\n        <div className=\"mt-5 border border-dashed border-blue-600 bg-gray-50\">\r\n            <div {...getRootProps({className: 'dropzone'})}>\r\n                <input {...getInputProps()} />\r\n                <p className=\"px-5 py-5 text-lg text-center\">\r\n                    <FontAwesomeIcon className=\"text-gray-500 text-2xl\" icon={faFileAlt} /> {files.length >= 1 ? files : 'Arrastra y suelta tu trama aquí'} \r\n                </p>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            {files.length < 1 ? files : \r\n            <div className=\"mt-3\">\r\n                <p className=\"text-gray-800 font-bold italic text-lg text-center\"> Trama Ingresada: </p>\r\n                <div className=\"border border-gray-100 px-2 py-1\">\r\n                    {tramaInfo}\r\n                </div>\r\n            </div>\r\n            } \r\n        </div>\r\n        </section>\r\n        \r\n    );\r\n}\r\n\r\nexport default DropFile;","import React, { useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setTrama } from '../../../features/tramaSlice';\r\n\r\nconst PegarTrama = () => {\r\n    const tramaRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const tramaContent = useSelector(state => state.trama.content);\r\n\r\n    useEffect(() => {\r\n        tramaRef.current.focus();\r\n        if (tramaContent) {\r\n            tramaRef.current.value = tramaContent;\r\n        }\r\n    }, []);\r\n\r\n    const registerTrama = () => {\r\n        dispatch(setTrama(tramaRef.current.value.trim()));\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col\">\r\n            <div className=\"text-lg font-sans\">Pegar Trama</div>\r\n            <div className=\"mt-2\">\r\n                <textarea onKeyUp={registerTrama} placeholder=\"Pega tu trama aquí...\" ref={tramaRef} className=\"w-full h-32 shadow-sm focus:outline-none border border-blue-500 px-2 py-1\" />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PegarTrama;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: '',\r\n});","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faWifi, faNetworkWired, faDotCircle, faEthernet, faServer, faInfoCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { resetAll } from '../../../features/tramaSlice';\r\n\r\nconst Results = ({ setIsModalVisible }) => {\r\n    const { result } = useSelector(state => state.trama);\r\n    const { frame } = result;\r\n    const { Red } = frame;\r\n    const { Adicional } = frame;\r\n    const { content } = useSelector(state => state.trama);\r\n    const [show, setShow] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const closeAll = () => {\r\n        setIsModalVisible(false);\r\n        setTimeout(() => {\r\n            dispatch(resetAll());\r\n        }, 300);\r\n    }\r\n\r\n    const newTrama = () => {\r\n        dispatch(resetAll());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"text-center text-2xl italic\">\r\n                <FontAwesomeIcon icon={faNetworkWired} className=\"text-blue-500\" /> Trama Procesada\r\n                <hr className=\"mt-1 md:mx-16\" />\r\n            </div>\r\n            <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 text-center text-xl\">\r\n                <div className=\"flex flex-col items-center gap-2\">\r\n                    <div className=\"text-lg cursor-pointer italic\">\r\n                        <FontAwesomeIcon icon={faEthernet} className=\"text-blue-600 text-xl\" /> Ethernet\r\n                    </div>\r\n                    <div className=\"flex flex-col px-2 py-1 gap-2\">\r\n                        <div className=\"flex justify-between gap-2\">\r\n                            <div className=\"font-bold\">\r\n                                <FontAwesomeIcon className=\"text-sm text-blue-500\" icon={faDotCircle} /> MAC Destino:\r\n                            </div> \r\n                            <div>{frame['Ethernet II']['MAC Destino']}</div>\r\n                        </div>\r\n                        <div className=\"flex justify-between gap-2\">\r\n                            <div className=\"font-bold\">\r\n                                <FontAwesomeIcon className=\"text-sm text-blue-500\" icon={faDotCircle} /> MAC Origen:\r\n                            </div> \r\n                            <div>{frame['Ethernet II']['MAC Origen']}</div>\r\n                        </div>\r\n                        <div className=\"flex justify-between gap-2\">\r\n                            <div className=\"font-bold\">\r\n                                <FontAwesomeIcon className=\"text-sm text-blue-500\" icon={faDotCircle} /> EtherType:\r\n                            </div> \r\n                            <div>{frame['Ethernet II']['EtherType']}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"flex flex-col items-center gap-2\">\r\n                        <div className=\"text-lg cursor-pointer italic\">\r\n                            <FontAwesomeIcon icon={faWifi} className=\"text-blue-600 text-xl\" /> Paquete de Red\r\n                        </div>\r\n                        <div className=\"flex flex-col px-2 py-1 gap-2\">\r\n                            <div className=\"flex justify-between gap-4\">\r\n                                <div className=\"font-bold\">\r\n                                    <FontAwesomeIcon className=\"text-sm text-blue-500\" icon={faDotCircle} /> IP Origen:\r\n                                </div> \r\n                                <div>{Red['IP Origen']}</div>\r\n                            </div>\r\n                            <div className=\"flex justify-between gap-2\">\r\n                                <div className=\"font-bold\">\r\n                                    <FontAwesomeIcon className=\"text-sm text-blue-500\" icon={faDotCircle} /> IP Destino:\r\n                                </div> \r\n                                <div>{Red['IP Destino']}</div>\r\n                            </div>\r\n                            <div className=\"flex justify-between gap-2\">\r\n                                <div className=\"font-bold\">\r\n                                    <FontAwesomeIcon className=\"text-sm text-blue-500\" icon={faDotCircle} /> TTL:\r\n                                </div> \r\n                                <div>{Red['TLS']}</div>\r\n                            </div>\r\n                            <div className=\"flex justify-between gap-2\">\r\n                                <div className=\"font-bold\">\r\n                                    <FontAwesomeIcon className=\"text-sm text-blue-500\" icon={faDotCircle} /> Protocolo:\r\n                                </div> \r\n                                <div>{Red['Protocolo']}</div>\r\n                            </div>\r\n                            <div className=\"flex justify-between gap-2\">\r\n                                <div className=\"font-bold\">\r\n                                    <FontAwesomeIcon className=\"text-sm text-blue-500\" icon={faDotCircle} /> Puerto Origen:\r\n                                </div> \r\n                                <div className=\"flex items-center gap-1 relative\">\r\n                                    {Red['Puerto Origen']} {String(Adicional['Puerto Origen']).search('aleatoriamente') === -1 ?  \r\n                                    <div className=\"absolute -right-7 shadow-sm\">\r\n                                        <FontAwesomeIcon icon={faServer} className=\"text-blue-600\" />\r\n                                    </div>\r\n                                    : ''}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex justify-between gap-2\">\r\n                                <div className=\"font-bold\">\r\n                                    <FontAwesomeIcon className=\"text-sm text-blue-500\" icon={faDotCircle} /> Puerto Destino:\r\n                                </div> \r\n                                <div className=\"flex items-center gap-1 relative\">\r\n                                {Red['Puerto Destino']} {String(Adicional['Puerto Destino']).search('aleatoriamente') === -1 ?  \r\n                                    <div className=\"absolute -right-7 shadow-sm\">\r\n                                        <FontAwesomeIcon icon={faServer} className=\"text-blue-600\" />\r\n                                    </div>\r\n                                    : ''}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-span-2 mt-2 flex flex-col gap-2\">\r\n                    <div className=\"italic\"><FontAwesomeIcon icon={faInfoCircle} className=\"text-blue-600\" /> Notas Adicionales</div>\r\n                    <div className=\"text-left md:mx-32 border border-gray-100 bg-gray-50 shadow-sm rounded-lg px-2 text-lg flex flex-col py-2\">\r\n                        <div>• {Adicional['Puerto Origen']}</div>\r\n                        <div>• {Adicional['Puerto Destino']}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center justify-between gap-2 mt-4\">\r\n                <div>\r\n                    <div onClick={() => setShow(true)} className=\"bg-gray-300 hover:bg-gray-200 px-4 py-2 rounded-lg cursor-pointer\">Ver Trama Original</div>\r\n                    \r\n                    <div className={show ? \"opacity-100 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 bg-white text-lg shadow-xl ring-2\" : \"hidden\"}>\r\n                        <div className=\"px-2 font-bold italic flex justify-between items-center\">\r\n                            <div>Trama Ingresada (Hexadecimal)</div>\r\n                            <div onClick={() => setShow(false)} className=\"mt-1 cursor-pointer\"><FontAwesomeIcon icon={faTimesCircle} className=\"text-red-500 text-xl\" /></div>\r\n                        </div>\r\n                        <div className=\"px-4 py-2\">{content}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                    <div onClick={closeAll} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 px-4 py-2 rounded-lg shadow-md cursor-pointer\">Salir</div>\r\n\r\n                    <div onClick={newTrama} className=\"bg-blue-600 text-white hover:bg-blue-500 px-4 py-2 rounded-lg shadow-md cursor-pointer\">Nueva trama</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Results;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DropFile from '../DropFile';\r\nimport PegarTrama from './PegarTrama';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaste, faFileUpload, faExclamationTriangle, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport axiosConfig from '../../../axiosConfig/axiosConfig';\r\nimport { resetAll, setResult, setShowResults } from '../../../features/tramaSlice';\r\nimport Results from './Results';\r\n\r\nconst Ingresar = ({ selectedMode, setSelectedMode, setIsModalVisible }) => {\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const tramaContent = useSelector(state => state.trama.content);\r\n    const showResults = useSelector(state => state.trama.showResults);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleTrama = () => {\r\n        if (!tramaContent) {\r\n            setError('Ingrese una trama antes de continuar');\r\n            return;\r\n        }\r\n        setError('');\r\n        setIsLoading(true);\r\n        axiosConfig.post('/api/frame', {\r\n            content: tramaContent,\r\n        }).then(res => {\r\n            const { data } = res;\r\n            if (data.success) {\r\n                dispatch(setResult(data.data));\r\n                dispatch(setShowResults(true));\r\n                setIsLoading(false);\r\n            } else {\r\n                setIsLoading(false);\r\n            }\r\n        }).catch(err => {\r\n            setError('Error al procesar la trama (Asegurese de ponerla en el formato correcto)');\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"shadow-xl mx:2 md:mx-56 my-24 p-6 bg-white rounded-lg\">\r\n            {showResults ? <Results setIsModalVisible={setIsModalVisible} /> :\r\n            <>\r\n                <div className=\"text-center text-2xl\">\r\n                    Ingrese la trama\r\n                </div>\r\n\r\n                <div className=\"flex flex-row-reverse gap-4\">\r\n                    <div className=\"flex border border-gray-500 rounded-lg shadow-md\">\r\n                        <div onClick={() => setSelectedMode('pegar')} className={selectedMode === 'pegar' \r\n                        ? \"bg-gray-200 px-4 py-1 cursor-pointer border-r border-gray-500 rounded-tl-lg rounded-bl-lg\"\r\n                        : \"hover:bg-gray-100 px-4 py-1 cursor-pointer border-r border-gray-500 rounded-tl-lg rounded-bl-lg\"}>\r\n                            <FontAwesomeIcon icon={faPaste} className=\"text-blue-600 text-lg\" /> Pegar\r\n                        </div>\r\n                        <div onClick={() => setSelectedMode('subir')} className={selectedMode === 'subir' \r\n                        ? \"bg-gray-200 px-4 py-1 cursor-pointer rounded-tr-lg rounded-br-lg\"\r\n                        : \"hover:bg-gray-100 px-4 py-1 cursor-pointer rounded-tr-lg rounded-br-lg\"}>\r\n                            <FontAwesomeIcon icon={faFileUpload} className=\"text-blue-600 text-lg\" /> Subir\r\n                        </div>            \r\n                    </div>\r\n                </div>\r\n                \r\n                {selectedMode === 'pegar' ? <PegarTrama /> : <DropFile />}\r\n                <div className={error.length !== 0 ? \"text-center text-red-700 font-bold mt-2\" : \"hidden\"}>\r\n                    <FontAwesomeIcon icon={faExclamationTriangle} /> {error} \r\n                </div>\r\n\r\n                <div className=\"flex flex-row-reverse mt-4\">\r\n                    <div className=\"mr-4\">\r\n                        <button onClick={() => {\r\n                            setIsModalVisible(false);\r\n                            dispatch(resetAll());\r\n                        }} className=\"mr-2 bg-gray-200 hover:bg-gray-300 text-gray-800 px-4 py-2 rounded-lg shadow-md\">Cancelar</button>\r\n                        <button onClick={handleTrama} className={isLoading ? \"bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded-lg shadow-md bg-opacity-80\" : \"bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded-lg shadow-md\"}\r\n                        disabled={isLoading ? true : false}>\r\n                            {!isLoading ? 'Procesar' : <FontAwesomeIcon icon={faSpinner} className=\"text-white mx-4 text-lg\" spin />}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Ingresar;","import React, { useState } from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Ingresar from './TramasProcess/Ingresar';\r\n\r\nconst Content = () => {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [selectedMode, setSelectedMode] = useState('subir');\r\n\r\n    return (\r\n        <div>\r\n            <Modal isVisible={isModalVisible} modalContent={\r\n                <Ingresar selectedMode={selectedMode} setSelectedMode={setSelectedMode} setIsModalVisible={setIsModalVisible} />\r\n            }/>\r\n\r\n            <div className={isModalVisible ? 'p-8 opacity-40' : 'p-8'}>\r\n                <div className=\"flex flex-col items-center justify-center shadow-xl mt-4 py-4 px-4 gap-8 bg-white\">\r\n                    <div className=\"text-xl flex justify-center items-center\">\r\n                        <h1 className=\"font-mono border-b-2 border-blue-500 shadow-sm px-4 py-2 rounded-lg\">Proyecto Tramas - Examen Segunda Unidad</h1>\r\n                    </div>\r\n                    <div className=\"text-lg\">\r\n                        Bienvenidos al \"Proyecto Tramas\", el cual consiste en una aplicación web \r\n                        que permite desglosar una trama a partir de una cadena de hexadecimales.\r\n                    </div>\r\n                    <div>\r\n                        <img className=\"shadow-sm\" width=\"800\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/13/Ethernet_Type_II_Frame_format.svg/1400px-Ethernet_Type_II_Frame_format.svg.png\" alt=\"Ethernet Frame\" />\r\n                        <div className=\"text-sm text-center text-gray-600 font-bold hover:underline\">\r\n                            <a href=\"https://www.wikiwand.com/en/Ethernet_frame\" rel=\"noreferrer\" target=\"_blank\">Estructura de una trama Ethernet II</a>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={() => setIsModalVisible(true)} className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-lg cursor-pointer shadow-md\">Subir Trama</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nimport Navbar from './Navbar';\r\nimport Content from './Content';\r\n\r\nconst Tramas = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Content />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Tramas;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\n\r\nimport Tramas from '../components/Main/Tramas';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Navigate to=\"/tramas\" />} />\r\n                <Route path=\"/tramas\" element={<Tramas />} />\r\n            </Routes>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './components/AppRouter';\nimport { configureStore } from '@reduxjs/toolkit';\nimport tramaReducer from './features/tramaSlice';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore({\n  reducer: {\n    trama: tramaReducer,\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}